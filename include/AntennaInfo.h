/*
 * Data simulator for mobile phone network events
 *
 * AntennaInfo.h
 *
 *  Created on: May 16, 2019
 *      Author: Bogdan Oancea
 */

#ifndef ANTENNAINFO_H_
#define ANTENNAINFO_H_

#include <string>
using namespace std;

/**
 * This class is used to encapsulate all the information about an event generated by an antenna: the timestamp, antennaId, event code,
 * device Id that generated the event and the exact position of the device
 *
 */
class AntennaInfo {
public:
	/**
	 * Constructor of the class, builds an object with the values of the fiedls provided as arguments.
	 * @param time the timestamp of the event
	 * @param antennaId the id of the antenna that registered an event
	 * @param event the event code
	 * @param deviceId the id of the device that generated the event
	 * @param x x coordinate of the device when the event was generated
	 * @param y y coordinate of the device when the event was generated
	 */
	AntennaInfo(const unsigned long time, const unsigned long antennaId,
			const unsigned long event, const unsigned long deviceId, const double x, const double y);
	/**
	 * @return the id of the antenna that registered an event.
	 */
	unsigned long getAntennaId() const;


	/**
	 *@return the id of the device that generated the event
	 */
	unsigned long getDeviceId() const;

	/**
	 * @return the event code
	 */
	unsigned long getEventCode() const;

	/**
	 * @return the timestamp of the event
	 */
	unsigned long getTime() const;

	/**
	 *
	 * @return x coordinate of the device that generated the event
	 */
	double getX() const;

	/**
	 *
	 * @return y coordinate of the device that generated the event
	 */
	double getY() const;

	/**
	 *
	 * @return a string representation of on object of this class
	 */
	const string toString() const;

	/**
	 * Overloaded operator to compare to objects
	 * @param ai the other object to compare to
	 * @return true if this object is less than ai, flase otherwise
	 */
	bool operator < (const AntennaInfo& ai) const;

private:
	unsigned long m_time;
	unsigned long m_antennaId;
	unsigned long m_eventCode;
	unsigned long m_deviceId;
	double m_x;
	double m_y;
};

#endif /* ANTENNAINFO_H_ */
